version: '3.5'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks: 
      - factorino
    restart: unless-stopped
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "factorino_events:1:1:delete,global_chat:1:1:delete,factory_activity:1:1:delete,factory_logs:1:1:delete,job_requests:1:1:delete"
      KAFKA_LOG_RETENTION_MS: -1
    networks: 
      - factorino
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-factorino}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-factorino}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - factorino
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-m@dsen.tv}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-factorino}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - factorino
    restart: unless-stopped

networks:
  factorino:
    driver: bridge
    name: factorino

volumes:
    postgres:
    pgadmin:
    